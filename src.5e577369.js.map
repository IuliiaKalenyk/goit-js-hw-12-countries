{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","intervalId","isActive","timer","document","querySelector","refs","days","hours","mins","secs","console","log","Date","now","setInterval","currentTime","time","getTimeComponents","updateClockface","clearInterval","textContent","pad","Math","floor","value","String","padStart","start"],"mappings":";AA+DC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7DKA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BC,KAAAA,WAAa,KACbC,KAAAA,UAAW,EACXH,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbG,KAAAA,MAAQC,SAASC,cAAc,KAAKN,UACzC,KAAKO,KAAO,CAEdC,KAAM,KAAKJ,MAAME,cAAc,uBAC/BG,MAAO,KAAKL,MAAME,cAAc,wBAChCI,KAAM,KAAKN,MAAME,cAAc,uBAC/BK,KAAM,KAAKP,MAAME,cAAc,wBAEjCM,QAAQC,IAAI,KAAKN,KAAKC,MA+CrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA7CC,MAAA,WAAQ,IAAA,EAAA,KACH,IAAA,KAAKL,SAAL,CAGeW,KAAKC,MAClBZ,KAAAA,UAAW,EAEXD,KAAAA,WAAac,YAAY,WACtBC,IAAAA,EAAcH,KAAKC,MAEnBG,EAAOC,EADK,EAAKlB,WAAagB,GAGpC,EAAKG,gBAAgBF,IACpB,QAgCN,CAAA,IAAA,OA9BC,MAAA,WACEG,cAAcnB,YACTC,KAAAA,UAAW,IA4BnB,CAAA,IAAA,kBA1BC,MAAA,SAA6C,GAA3BK,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAChCJ,KAAAA,KAAKC,KAAKc,YAAiBd,GAAAA,OAAAA,GAC3BD,KAAAA,KAAKE,MAAMa,YAAiBb,GAAAA,OAAAA,GAC5BF,KAAAA,KAAKG,KAAKY,YAAiBZ,GAAAA,OAAAA,GAC3BH,KAAAA,KAAKI,KAAKW,YAAiBX,GAAAA,OAAAA,OAsBjC,EA7DKZ,GA2CN,SAASoB,EAAkBD,GAKlB,MAAA,CAAEV,KAJIe,EAAIC,KAAKC,MAAMP,EAAQ,QAIrBT,MAHDc,EAAIC,KAAKC,MAAOP,EAAQ,MAAyB,OAGzCR,KAFTa,EAAIC,KAAKC,MAAOP,EAAQ,KAAoB,MAE7BP,KADfY,EAAIC,KAAKC,MAAOP,EAAQ,IAAc,OAKrD,SAASK,EAAIG,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnC,IAAMxB,EAAQ,IAAIL,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIa,KAAK,kBAGtBV,EAAMyB","file":"src.5e577369.js","sourceRoot":"../src","sourcesContent":["\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.timer = document.querySelector(this.selector),\n    this.refs = {\n  \n  days: this.timer.querySelector('[data-value=\"days\"]'),\n  hours: this.timer.querySelector('[data-value=\"hours\"]'),\n  mins: this.timer.querySelector('[data-value=\"mins\"]'),\n  secs: this.timer.querySelector('[data-value=\"secs\"]'),\n};\nconsole.log(this.refs.days);\n  }\n  start() {\n    if(this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n    \n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate - currentTime;\n      const time = getTimeComponents(deltaTime);\n      \n      this.updateClockface(time);\n    }, 1000);\n  }\n  stop() {\n    clearInterval(intervalId);\n    this.isActive = false;\n  }\n  updateClockface({ days, hours, mins, secs }) {\n  this.refs.days.textContent = `${days}`;\n  this.refs.hours.textContent = `${hours}`;\n  this.refs.mins.textContent = `${mins}`;\n  this.refs.secs.textContent = `${secs}`;\n}\n};\n\nfunction getTimeComponents(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return { days, hours, mins, secs };\n}\n\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2021'),\n});\n\n timer.start();"]}